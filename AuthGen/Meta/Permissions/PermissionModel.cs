namespace AuthGen
{
    public class PermissionModel : MetaModelDef
    {
        public PermissionModel()
        {
            SetName(Permission)
                .SetModuleName(M_Permissions)
                .SetBaseClass_FullAggregateRoot_Guid_Guid()
                .SetIRepository_Entity_Guid()
                .AddProperty(Guid(Id)
                    .ExistIn(Dto,RemoveDto))
                .AddProperty(Enum(PermissionTypes, _Type)
                     .ExistIn(DomainModel,Dto, DetailDto,AddDto))
                .AddProperty(String_Name()
                     .ExistIn(DomainModel,Dto, DetailDto,AddDto))
                .AddProperty(String(SystemId)
                     .ExistIn(DomainModel, DetailDto,AddDto))
                .AddProperty(String(AppId).IsRequired()
                     .ExistIn(DomainModel, DetailDto,AddDto))
                .AddProperty(String(Code)
                     .ExistIn(DomainModel,DetailDto,AddDto))
                .AddProperty(Guid(ParentId)
                     .ExistIn(DomainModel))
                .AddProperty(String(Url)
                     .ExistIn(DomainModel, DetailDto,AddDto))
                .AddProperty(String(Icon)
                     .ExistIn(DomainModel, DetailDto,AddDto))
                .AddProperty(Int(Order)
                     .ExistIn(DomainModel, DetailDto,AddDto))
                .AddProperty(String_Description()
                     .ExistIn(DomainModel,DetailDto,AddDto))
                .AddProperty(Bool(Enabled)
                     .ExistIn(DomainModel))
                .AddProperty(IReadOnlyCollection(Permission, ChildPermissions)
                     .ExistIn(DomainModel))
                .AddProperty(IReadOnlyCollection(Permission, ParentPermissions)
                     .ExistIn(DomainModel))
                .AddProperty(IReadOnlyCollection(PermissionRelation, ChildPermissionRelations)
                     .ExistIn(DomainModel))
                .AddProperty(IReadOnlyCollection(PermissionRelation, ParentPermissionRelations)
                     .ExistIn(DomainModel))
                .AddProperty(IReadOnlyCollection(UserPermission, UserPermissions)
                     .ExistIn(DomainModel))
                .AddProperty(IReadOnlyCollection(RolePermission, RolePermissions)
                     .ExistIn(DomainModel))
                .AddProperty(IReadOnlyCollection(TeamPermission, TeamPermissions)
                     .ExistIn(DomainModel))
                .SupportAdd()
                .SupportRemove()
                .SupportDetail()
                .EntityTypeConfiguration
                .HasKey(Id)
                .HasIndex(new EFIndexConfig("p => new { p.SystemId, p.AppId, p.Code }", true, "[IsDeleted] = 0", EFIndexType.CombinePropIndex))
                .Property(new EFPropertyConfig(Name,true,40))
                .Property(new EFPropertyConfig(Code, true,255))
                .Property(new EFPropertyConfig(Url, true,250))
                .Property(new EFPropertyConfig(Description, false,255))
                .Property(new EFPropertyConfig(_Type, PermissionTypes))
                .Return(); ;
            ;
        }
    }
}
