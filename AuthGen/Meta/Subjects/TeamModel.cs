namespace AuthGen
{
    public class TeamModel : MetaModelDef
    {
        public TeamModel()
        {
            SetName(Team)
                .SetModuleName(Subjects)
                .SetBaseClass_FullAggregateRoot_Guid_Guid()
                .SetIRepository_Entity_Guid()
                .AddProperty(Guid(Id)
                    .ExistIn(Dto, DetailDto, SelectDto))
                .AddProperty(NewProperty(TeamBasicInfo, TeamBasicInfo, DefaultValue_CtorNew)
                     .ExistIn(DetailDto))
             .AddProperty(NewProperty(TeamPersonnel, TeamAdmin, DefaultValue_CtorNew)
                     .ExistIn(DetailDto))
             .AddProperty(NewProperty(TeamPersonnel, TeamMember, DefaultValue_CtorNew)
                     .ExistIn(DetailDto))
                .AddProperty(String_Name()
                     .ExistIn(DomainModel,Dto, GetDto, SelectDto, AddDto))
                .AddProperty(String(Avatar)
                     .ExistIn(Dto, SelectDto))
                .AddProperty(NewProperty(AvatarValue, Avatar, DefaultValue_CtorNew)
                     .ExistIn(DomainModel, AddDto))
                .AddProperty(String_Description()
                    .ExistIn(DomainModel,Dto, AddDto))
                .AddProperty(Int(MemberCount)
                    .ExistIn(Dto))
                .AddProperty(ListString(AdminAvatar)
                    .ExistIn(Dto))
                 .AddProperty(ListGuid(AdminStaffs)
                    .ExistIn(AddDto))
                  .AddProperty(ListGuid(AdminRoles)
                    .ExistIn(AddDto))
                    .AddProperty(ListGuid(MemberStaffs)
                    .ExistIn(AddDto))
                      .AddProperty(ListGuid(MemberRoles)
                    .ExistIn(AddDto))
                    .AddProperty(List(SubjectPermissionRelation, AdminPermissions)
                    .ExistIn(AddDto))
                     .AddProperty(List(SubjectPermissionRelation, MemberPermissions)
                    .ExistIn(AddDto))
                .AddProperty(String(Modifier)
                    .ExistIn(Dto))
                .AddProperty(DateTime(ModificationTime).IsNullable()
                    .ExistIn(Dto))
                .AddProperty(Enum(TeamTypes, TeamType)
                    .ExistIn(DomainModel, AddDto))
                .AddProperty(IReadOnlyCollection(TeamStaff, TeamStaffs)
                     .ExistIn(DomainModel))
                .AddProperty(IReadOnlyCollection(TeamPermission, TeamPermissions)
                     .ExistIn(DomainModel))
                .AddProperty(IReadOnlyCollection(TeamRole, TeamRoles)
                     .ExistIn(DomainModel))
                .SupportAdd()
                .SupportDetail()
                .SupportGet()
                //.SupportUpdate()
                .SupportRemove()
                .SupportSelect()
                .EntityTypeConfiguration
                .HasKey(Id)
                .HasIndex(new EFIndexConfig(Name, true, "[IsDeleted] = 0"))
                .Property(new EFPropertyConfig(Name, true, 20))
                .Property(new EFPropertyConfig(Description, maxLen: 255))
                .Return();
            ;
        }
    }
}
