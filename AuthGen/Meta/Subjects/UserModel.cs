namespace AuthGen
{
    public class UserModel : MetaModelDef
    {
        public UserModel()
        {
            SetName(User)
               .SetModuleName(Subjects)
               .SetBaseClass_FullAggregateRoot_Guid_Guid()
               .SetIRepository_Entity()
               .AddProperty(Guid(Id)
                   .ExistIn(Dto, UpdateDto, RemoveDto))
               .AddProperty(Guid(UserId)
                   .ExistIn(SelectDto, GetDto))
               .AddProperty(String_Name()
                   .ExistIn(DomainModel, Dto, SelectDto, AddDto, UpdateDto))
               .AddProperty(String(DisplayName)
                 .ExistIn(DomainModel, Dto, SelectDto, AddDto, UpdateDto))
               .AddProperty(String(Avatar)
                 .ExistIn(DomainModel, Dto, SelectDto, AddDto, UpdateDto))
               .AddProperty(String(IdCard)
                 .ExistIn(DomainModel, Dto, AddDto, UpdateDto))
               .AddProperty(String(Account)
                 .ExistIn(DomainModel, Dto, SelectDto, AddDto))
               .AddProperty(String(Password)
                 .ExistIn(DomainModel, DetailDto, AddDto, UpdateDto))
               .AddProperty(String(CompanyName)
                 .ExistIn(DomainModel, Dto, AddDto, UpdateDto))
                 .AddProperty(ListString(ThirdPartyIdpAvatars)
                 .ExistIn(DetailDto))
               .AddProperty(String(Department)
                 .ExistIn(DomainModel, DetailDto, AddDto, UpdateDto))
               .AddProperty(String(Position)
                  .ExistIn(DomainModel, DetailDto, AddDto, UpdateDto))
               .AddProperty(Bool(Enabled)
                 .ExistIn(DomainModel, Dto, GetDto, AddDto, UpdateDto))
               .AddProperty(DateTime(CreationTime)
                 .ExistIn(Dto))
                .AddProperty(String(Creator)
                 .ExistIn(DetailDto))
                  .AddProperty(String(Modifier)
                 .ExistIn(DetailDto))
               .AddProperty(String(ModificationTime)
                 .ExistIn(DetailDto))
                  .AddProperty(List(SubjectPermissionRelation, Permissions)
                 .ExistIn(DetailDto, AddDto))
              .AddProperty(ListGuid(RoleIds)
                 .ExistIn(DetailDto, AddDto))
               .AddProperty(Enum(GenderTypes, GenderType)
                 .ExistIn(DomainModel, Dto, AddDto, UpdateDto))
               .AddProperty(String(PhoneNumber)
                 .ExistIn(DomainModel, Dto, SelectDto, AddDto))
               .AddProperty(String(Landline)
                 .ExistIn(DomainModel, AddDto, UpdateDto))
               .AddProperty(String(Email)
                 .ExistIn(DomainModel, Dto, SelectDto, AddDto, UpdateDto))
               .AddProperty(NewProperty(AddressValue, Address, DefaultValue_CtorNew)
                 .ExistIn(DomainModel, Dto, AddDto, UpdateDto))
               .AddProperty(IReadOnlyCollection(UserRole, Roles)
                .ExistIn(DomainModel))
               .AddProperty(IReadOnlyCollection(UserPermission, Permissions)
                 .ExistIn(DomainModel))
               .AddProperty(IReadOnlyCollection(ThirdPartyUser, ThirdPartyUsers)
                 .ExistIn(DomainModel))
                .AddProperty(DateTime(StartTime).IsNullable()
                    .ExistIn(GetDto))
                .AddProperty(DateTime(EndTime).IsNullable()
                    .ExistIn(GetDto))
                .SupportGet()
                .SupportAdd()
                .SupportDetail()
                .SupportSelect(AutoCompleteDocument_Guid)
                .SetDetialDtoInheritDto()
                .SupportUpdate()
                .SupportRemove(true)
                .EntityTypeConfiguration
                .HasKey(Id)
                .HasIndex(new EFIndexConfig(Name))
                .HasIndex(new EFIndexConfig(IdCard, true, "[IsDeleted] = 0 and IdCard!=''"))
                .HasIndex(new EFIndexConfig(PhoneNumber, true, "[IsDeleted] = 0 and PhoneNumber!=''"))
                .HasIndex(new EFIndexConfig(Email, true, "[IsDeleted] = 0 and Email!=''"))
                .Property(new EFPropertyConfig(IdCard, maxLen: 18))
                .Property(new EFPropertyConfig(PhoneNumber, maxLen: 11))
                .Return();
        }
    }
}
